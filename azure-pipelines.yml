# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'


stages:
  - stage: Build
    jobs:
      - job: Build
        steps:

        - task: NuGetToolInstaller@1
          displayName: Install nuget tool

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'
          displayName: nuget restore

        - task: VSBuild@1
          inputs:
            solution: '**/PaymentBank.AccountService.csproj'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\AccountService.zip" /p:DeployIisAppPath="Default Web Site"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
          displayName: build AccountService

        - task: VSBuild@1
          inputs:
            solution: '**/PaymentBank.TransactionService.csproj'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\TransactionService.zip" /p:DeployIisAppPath="Default Web Site"'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
          displayName: build TransactionService

        - task: VSBuild@1
          inputs:
            solution: '**\PaymentBank.Tests.csproj'
          displayName: Build test project

        - task: DotNetCoreCLI@2
          inputs:
            command: 'custom'
            projects: '**\PaymentBank.Tests.csproj'
            custom: 'test'
            arguments: '--logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'

        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            testResultsFiles: '$(System.DefaultWorkingDirectory)/**/*.trx'
            mergeTestResults: true
            failTaskOnFailedTests: true
      
        - task: PublishCodeCoverageResults@1
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*.cobertura.xml'
        # - task: VSTest@2
        #   inputs:
        #     testSelector: 'testAssemblies'
        #     testAssemblyVer2: '**/bin/**/PaymentBank.Tests.dll'
        #     searchFolder: '$(System.DefaultWorkingDirectory)'
        #     codeCoverageEnabled: true
        #     platform: '$(buildPlatform)'
        #     configuration: '$(buildConfiguration)'
        #     rerunFailedTests: false
        #     resultsFolder: $(build.ArtifactStagingDirectory)\Test\Results
        #   displayName: Test

        # - task: reportgenerator@4
        #   inputs:
        #     reports: '$(Build.ArtifactStagingDirectory)\**\*.coverage'
        #     targetdir: '$(Build.ArtifactStagingDirectory)\Test\Results\Coveragereport'

        # - task: PublishCodeCoverageResults@1
        #   inputs:
        #     codeCoverageTool: 'Cobertura'
        #     summaryFileLocation: '$(Build.ArtifactStagingDirectory)\Test\Results\Coveragereport\Cobertura.xml'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

        - task: AzureRmWebAppDeployment@4
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Pay-As-You-Go(635b6f31-6bab-4592-a015-9cc9e1521208)'
            appType: 'webApp'
            WebAppName: 'PaymentBank-AccountService'
            packageForLinux: '$(build.artifactStagingDirectory)\AccountService.zip'

        - task: AzureRmWebAppDeployment@4
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Pay-As-You-Go(635b6f31-6bab-4592-a015-9cc9e1521208)'
            appType: 'webApp'
            WebAppName: 'PaymentBank-TransactionService'
            packageForLinux: '$(build.artifactStagingDirectory)\TransactionService.zip'